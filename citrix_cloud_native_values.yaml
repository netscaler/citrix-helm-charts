cic:
  enabled: False

  image: quay.io/citrix/citrix-k8s-ingress-controller:1.26.7
  pullPolicy: IfNotPresent
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  openshift: false
  adcCredentialSecret:
  nsIP: x.x.x.x
  nsVIP:
  nsSNIPS:
  license:
    accept: no
  nsPort: 443
  nsProtocol: HTTPS
  nitroReadTimeout:
  logLevel: INFO
  jsonLog: false
  entityPrefix:
  kubernetesURL:
  clusterName:
  ingressClass:
  setAsDefaultIngressClass: False
  serviceClass:
  defaultSSLCertSecret:
  podIPsforServiceGroupMembers: False
  ignoreNodeExternalIP: False
  ipam: False
  disableAPIServerCertVerify: False
  logProxy:
  nodeWatch: false
  cncPbr: False
  nodeSelector:
    key:
    value:
  updateIngressStatus: True
  nsHTTP2ServerSide: "OFF"
  nsCookieVersion: "0"

  routeLabels:
  namespaceLabels:
  disableOpenshiftRoutes:

  exporter:
    required: false
    image: quay.io/citrix/citrix-adc-metrics-exporter:1.4.9
    pullPolicy: IfNotPresent
    ports:
      containerPort: 8888
    resources: {}

  crds:
    install: false
    retainOnDelete: false

  analyticsConfig:
    required: false
    distributedTracing:
      enable: false
      samplingrate: 100
    endpoint:
      server:
      service:
    timeseries:
      port: 30002
      metrics:
        enable: false
        mode: 'avro'
      auditlogs:
        enable: false
      events:
        enable: false
    transactions:
      enable: false
      port: 30001

  nsLbHashAlgo:
    required: false
    hashFingers: 256
    hashAlgorithm: 'DEFAULT'

  serviceAccount:
    create: true

  podAnnotations: {}

  resources: {}

  affinity: {}

mcIngress:
  enabled: False

  image: quay.io/citrix/citrix-k8s-ingress-controller:1.26.7
  pullPolicy: IfNotPresent
  openshift: false
  localRegion:
  localCluster:
  license:
    accept: no
  nsPort: 443
  nsProtocol: HTTPS
  nitroReadTimeout:
  logLevel: INFO
  entityPrefix:
  disableAPIServerCertVerify: False
  kubernetesURL:
  sitedata:

  crds:
    install: false
    retainOnDelete: false

  serviceAccount:
    create: true

cpx:
  enabled: False

  image: quay.io/citrix/citrix-k8s-cpx-ingress:13.0-83.27
  pullPolicy: IfNotPresent
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  replicaCount: 1

  mgmtHttpPort: 9080
  mgmtHttpsPort: 9443
  openshift: false
  nsHTTP2ServerSide: "OFF"
  nsCookieVersion: "0"

  routeLabels:
  namespaceLabels:

  cpxBgpRouter: false
  nsIP: 192.168.1.2
  nsGateway: 192.168.1.1

  nsProtocol: http
  ingressIP:
  ipam: False

  sslCertManagedByAWS: False

  nodeSelector:
    key:
    value:

  serviceType:
    loadBalancer:
      enabled: False
    nodePort:
      enabled: False
      httpPort:
      httpsPort:

  serviceAnnotations: {}

  serviceSpec:
    externalTrafficPolicy: "Cluster"
    loadBalancerIP:
    loadBalancerSourceRanges: []

  servicePorts: []

  cic:
    image: quay.io/citrix/citrix-k8s-ingress-controller:1.26.7
    pullPolicy: IfNotPresent
    required: true
    resources: {}
  entityPrefix:
  license:
    accept: no
  ingressClass:
  setAsDefaultIngressClass: False
  nitroReadTimeout:
  logLevel: INFO
  jsonLog: false
  defaultSSLCertSecret:
  updateIngressStatus: False
  disableAPIServerCertVerify: False
  logProxy:
  kubernetesURL:
  disableOpenshiftRoutes:

  ADMSettings:
    licenseServerIP:
    licenseServerPort: 27000
    ADMIP:
    loginSecret:
    bandWidthLicense: false
    bandWidth:
    vCPULicense: false
    cpxCores:

  exporter:
    required: false
    image: quay.io/citrix/citrix-adc-metrics-exporter:1.4.9
    pullPolicy: IfNotPresent
    ports:
      containerPort: 8888
    resources: {}

  crds:
    install: false
    retainOnDelete: false

  analyticsConfig:
    required: false
    distributedTracing:
      enable: false
      samplingrate: 100
    endpoint:
      server:
      service:
    timeseries:
      port: 5563
      metrics:
        enable: false
        mode: 'avro'
      auditlogs:
        enable: false
      events:
        enable: false
    transactions:
      enable: false
      port: 5557

  bgpSettings:
    required: false
    bgpConfig:
    - bgpRouter:
        localAS: 100
        neighbor:
        - address:
          remoteAS: 100
          advertisementInterval: 10
          ASOriginationInterval: 10

  nsLbHashAlgo:
    required: false
    hashFingers: 256
    hashAlgorithm: 'DEFAULT'

  serviceAccount:
    create: true

  podAnnotations: {}

  resources: {}

  affinity: {}

iaIngress:
  enabled: False

  citrixCPX: false

  coe:
    coeURL:
    coeTracing: false

  metricExporter:
    required: true
    image: quay.io/citrix/citrix-adc-metrics-exporter:1.4.9
    port: 8888
    secure: "YES"
    logLevel: ERROR
    imagePullPolicy: IfNotPresent

  xDSAdaptor:
    image: quay.io/citrix/citrix-xds-adaptor:0.10.1
    imagePullPolicy: IfNotPresent
    proxyType: router
    secureConnect: true
    logLevel: DEBUG
    jsonLog: false

  istioPilot:
    name: istiod
    namespace: istio-system
    secureGrpcPort: 15012
    insecureGrpcPort: 15010
    SAN:

  certProvider:
    caAddr: istiod.istio-system.svc
    caPort: 15012
    trustDomain: cluster.local
    certTTLinHours: 720
    clusterId: Kubernetes
    jwtPolicy: #specify third-party-jwt if Kubernetes cluster supports third-party tokens


  ingressGateway:
    netscalerUrl: null
    image: quay.io/citrix/citrix-k8s-cpx-ingress:13.0-83.27
    imagePullPolicy: IfNotPresent
    EULA: NO
    mgmtHttpPort: 10080
    mgmtHttpsPort: 10443
    httpNodePort: 30180
    httpsNodePort: 31443
    nodePortRequired: false
    lightWeightCPX: 1
    secretVolumes:
    #licenseServerIP: this value will be taken from ADMSettings.ADMIP
    label: citrix-ingressgateway
    tcpPort:
    vserverIP: nsip
    adcServerName:
    netProfile:
    multiClusterIngress: false
    multiClusterListenerPort: 15443
    multiClusterListenerNodePort: 32443
    multiClusterSvcDomain: global


  ADMSettings:
    ADMIP:
    licenseServerIP:
    licenseServerPort: 27000
    bandWidthLicense: false
    bandWidth:
    vCPULicense: false
    cpxCores:

  secretName: nslogin

iaEgress:
  enabled: False

  citrixCPX: false

  coe:
      coeURL:
      coeTracing: false

  metricExporter:
    required: true
    image: quay.io/citrix/citrix-adc-metrics-exporter:1.4.9
    port: 8888
    secure: "FALSE"
    logLevel: ERROR
    imagePullPolicy: IfNotPresent

  istioPilot:
    name: istiod
    namespace: istio-system
    secureGrpcPort: 15012
    insecureGrpcPort: 15010
    SAN: ""

  certProvider:
    caAddr: istiod.istio-system.svc
    caPort: 15012
    trustDomain: cluster.local
    certTTLinHours: 720
    clusterId: Kubernetes
    jwtPolicy: #specify third-party-jwt if Kubernetes cluster supports third-party tokens

  xDSAdaptor:
    image: quay.io/citrix/citrix-xds-adaptor:0.10.1
    imagePullPolicy: IfNotPresent
    proxyType: router
    secureConnect: true
    logLevel: DEBUG
    jsonLog: false


  egressGateway:
    netscalerUrl: null
    image: quay.io/citrix/citrix-k8s-cpx-ingress:13.0-83.27
    imagePullPolicy: IfNotPresent
    EULA: false
    mgmtHttpPort: 10080
    mgmtHttpsPort: 10443
    lightWeightCPX: 1
    label: citrix-egressgateway
    vserverIP: nsip
    adcServerName:
    netProfile:

  ADMSettings:
    ADMIP:
    licenseServerIP:
    licenseServerPort: 27000
    bandWidthLicense: false
    bandWidth:
    vCPULicense: false
    cpxCores:

  secretName: nsloginegress


iaSidecar:
  enabled: False

  xDSAdaptor:
    image: quay.io/citrix/citrix-xds-adaptor:0.10.1
    imagePullPolicy: IfNotPresent
    proxyType: sidecar
    secureConnect: true
    logLevel: DEBUG
    jsonLog: false

  coe:
    coeURL:
    coeTracing: false

  istioPilot:
    name: istiod
    namespace: istio-system
    secureGrpcPort: 15012
    insecureGrpcPort: 15010
    SAN: #"spiffe://cluster.local/ns/istio-system/sa/istiod-service-account"

  certProvider:
    caAddr: istiod.istio-system.svc
    caPort: 15012
    trustDomain: cluster.local
    certTTLinHours: 720
    clusterId: Kubernetes
    jwtPolicy: #specify third-party-jwt if Kubernetes cluster supports third-party tokens

  cpxProxy:
    netscalerUrl: "http://127.0.0.1"
    image: quay.io/citrix/citrix-k8s-cpx-ingress:13.0-83.27
    imagePullPolicy: IfNotPresent
    EULA: NO
    cpxSidecarMode: YES
    mgmtHttpPort: 10080
    mgmtHttpsPort: 10443
    cpxDisableProbe: "YES"
    #licenseServerIP: this value is taken from ADMSettings.ADMIP

  ADMSettings:
    ADMIP:
    licenseServerIP:
    licenseServerPort: 27000
    bandWidthLicense: false
    bandWidth:

  sidecarWebHook:
    webhookImage: quay.io/citrix/cpx-istio-sidecar-injector:1.2.0
    imagePullPolicy: IfNotPresent

  sidecarCertsGenerator:
    image: quay.io/citrix/cpx-sidecar-injector-certgen:1.2.0
    imagePullPolicy: IfNotPresent

  webhook:
    injectionLabelName: cpx-injection

cnc:
  enabled: False
  image: quay.io/citrix/citrix-k8s-node-controller:2.2.9
  pullPolicy: IfNotPresent
  license:
    accept: no
  nsIP:
  adcCredentialSecret:
  network:
  vtepIP:
  vxlan:
    id:
    port:
  cniType:
  dsrIPRange:
  clusterName:
  cncRouterImage:

  serviceAccount:
    create: true

coe:
  enabled: False
  image: quay.io/citrix/citrix-observability-exporter:1.3.001
  pullPolicy: IfNotPresent
  replicas: 1
  license:
    accept: no
  nodePortRequired: false
  headless: false
  transaction:
    nodePort: 30001
  ns_tracing:
    enabled: false
    server: "zipkin:9411/api/v1/spans"
  splunk:
    enabled: false
    server:
    authtoken:
    indexprefix:
  elasticsearch:
    enabled: false
    server:
    indexprefix:
  kafka:
    enabled: false
    broker:
    topic:
  timeseries:
    enabled: false
    nodePort: 30002

ipam:
  enabled: False
  image: quay.io/citrix/citrix-ipam-controller:1.0.3
  pullPolicy: IfNotPresent

  vipRange:

ao:
  image: quay.io/citrix/adm-agent-onboarding:1.1.0
  pullPolicy: IfNotPresent
  token:
  cloudUrl: https://adm.cloud.com

  admAgent:
    name: admagent
    image: quay.io/citrix/adm-agent:latest
    helperImage: quay.io/citrix/adm-agent-helper:1.0.0
    loginSecret:

  adc:
    IP:
    mgmtHTTPPort: 80
    mgmtHTTPSPort: 443
    loginSecret: nslogin
